;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 17-Apr-20 10:33:24 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x020506  	LJMP 1286
0x0003	0x02049B  	LJMP 1179
0x0006	0x00      	NOP
0x0007	0x00      	NOP
0x0008	0x00      	NOP
0x0009	0x00      	NOP
0x000A	0x00      	NOP
0x000B	0x020571  	LJMP 1393
0x000E	0x00      	NOP
0x000F	0x00      	NOP
0x0010	0x00      	NOP
0x0011	0x00      	NOP
0x0012	0x00      	NOP
0x0013	0x0204CC  	LJMP 1228
0x0016	0x00      	NOP
0x0017	0x00      	NOP
0x0018	0x00      	NOP
0x0019	0x00      	NOP
0x001A	0x00      	NOP
0x001B	0x020000  	LJMP 0
0x001E	0x00      	NOP
0x001F	0x00      	NOP
0x0020	0x00      	NOP
0x0021	0x00      	NOP
0x0022	0x00      	NOP
0x0023	0x020000  	LJMP 0
_Delay_5500us:
;__Lib_Delays.c,213 :: 		void Delay_5500us() {
;__Lib_Delays.c,214 :: 		Delay_us(5500);
0x0026	0x7E09    	MOV R6, 9
0x0028	0x7FE9    	MOV R7, 233
0x002A	0xDFFE    	DJNZ R7, PC-2
0x002C	0xDEFC    	DJNZ R6, PC-4
0x002E	0x00      	NOP
;__Lib_Delays.c,215 :: 		}
0x002F	0x22      	RET
; end of _Delay_5500us
_Delay_50us:
;__Lib_Delays.c,138 :: 		void Delay_50us() {
;__Lib_Delays.c,139 :: 		Delay_us(50);
0x0030	0x7F14    	MOV R7, 20
0x0032	0xDFFE    	DJNZ R7, PC-2
0x0034	0x00      	NOP
;__Lib_Delays.c,140 :: 		}
0x0035	0x22      	RET
; end of _Delay_50us
_Delay_1us:
;__Lib_Delays.c,63 :: 		void Delay_1us() {
;__Lib_Delays.c,64 :: 		Delay_us(1);
0x0036	0x00      	NOP
;__Lib_Delays.c,65 :: 		}
0x0037	0x22      	RET
; end of _Delay_1us
_Lcd_Cmd:
;__Lib_Lcd.c,13 :: 		
;__Lib_Lcd.c,14 :: 		
0x0038	0xE515    	MOV A, FARG_Lcd_Cmd_out_char
0x003A	0x5480    	ANL A, #128
0x003C	0xF8      	MOV R0, A
0x003D	0x630080  	XRL R0, #128
0x0040	0xE8      	MOV A, R0
0x0041	0x6004    	JZ L__Lcd_Cmd24
0x0043	0x7800    	MOV R0, #0
0x0045	0x8002    	SJMP L__Lcd_Cmd25
L__Lcd_Cmd24:
0x0047	0x7801    	MOV R0, #1
L__Lcd_Cmd25:
0x0049	0xE8      	MOV A, R0
0x004A	0x13      	RRC A
0x004B	0x9285    	MOV LCD_D7, C
;__Lib_Lcd.c,15 :: 		
0x004D	0xE515    	MOV A, FARG_Lcd_Cmd_out_char
0x004F	0x5440    	ANL A, #64
0x0051	0xF8      	MOV R0, A
0x0052	0x630040  	XRL R0, #64
0x0055	0xE8      	MOV A, R0
0x0056	0x6004    	JZ L__Lcd_Cmd26
0x0058	0x7800    	MOV R0, #0
0x005A	0x8002    	SJMP L__Lcd_Cmd27
L__Lcd_Cmd26:
0x005C	0x7801    	MOV R0, #1
L__Lcd_Cmd27:
0x005E	0xE8      	MOV A, R0
0x005F	0x13      	RRC A
0x0060	0x9284    	MOV LCD_D6, C
;__Lib_Lcd.c,16 :: 		
0x0062	0xE515    	MOV A, FARG_Lcd_Cmd_out_char
0x0064	0x5420    	ANL A, #32
0x0066	0xF8      	MOV R0, A
0x0067	0x630020  	XRL R0, #32
0x006A	0xE8      	MOV A, R0
0x006B	0x6004    	JZ L__Lcd_Cmd28
0x006D	0x7800    	MOV R0, #0
0x006F	0x8002    	SJMP L__Lcd_Cmd29
L__Lcd_Cmd28:
0x0071	0x7801    	MOV R0, #1
L__Lcd_Cmd29:
0x0073	0xE8      	MOV A, R0
0x0074	0x13      	RRC A
0x0075	0x9283    	MOV LCD_D5, C
;__Lib_Lcd.c,17 :: 		
0x0077	0xE515    	MOV A, FARG_Lcd_Cmd_out_char
0x0079	0x5410    	ANL A, #16
0x007B	0xF8      	MOV R0, A
0x007C	0x630010  	XRL R0, #16
0x007F	0xE8      	MOV A, R0
0x0080	0x6004    	JZ L__Lcd_Cmd30
0x0082	0x7800    	MOV R0, #0
0x0084	0x8002    	SJMP L__Lcd_Cmd31
L__Lcd_Cmd30:
0x0086	0x7801    	MOV R0, #1
L__Lcd_Cmd31:
0x0088	0xE8      	MOV A, R0
0x0089	0x13      	RRC A
0x008A	0x9282    	MOV LCD_D4, C
;__Lib_Lcd.c,19 :: 		
0x008C	0xE50C    	MOV A, _cmd_status
0x008E	0x6004    	JZ L_Lcd_Cmd0
0x0090	0x7800    	MOV R0, #0
0x0092	0x8002    	SJMP L_Lcd_Cmd1
L_Lcd_Cmd0:
0x0094	0x7801    	MOV R0, #1
L_Lcd_Cmd1:
0x0096	0xE8      	MOV A, R0
0x0097	0x13      	RRC A
0x0098	0x9280    	MOV LCD_RS, C
;__Lib_Lcd.c,21 :: 		
0x009A	0xD281    	SETB LCD_EN
;__Lib_Lcd.c,22 :: 		
0x009C	0x1136    	ACALL _Delay_1us
;__Lib_Lcd.c,23 :: 		
0x009E	0xC281    	CLR LCD_EN
;__Lib_Lcd.c,25 :: 		
0x00A0	0xE515    	MOV A, FARG_Lcd_Cmd_out_char
0x00A2	0x5408    	ANL A, #8
0x00A4	0xF8      	MOV R0, A
0x00A5	0x630008  	XRL R0, #8
0x00A8	0xE8      	MOV A, R0
0x00A9	0x6004    	JZ L__Lcd_Cmd32
0x00AB	0x7800    	MOV R0, #0
0x00AD	0x8002    	SJMP L__Lcd_Cmd33
L__Lcd_Cmd32:
0x00AF	0x7801    	MOV R0, #1
L__Lcd_Cmd33:
0x00B1	0xE8      	MOV A, R0
0x00B2	0x13      	RRC A
0x00B3	0x9285    	MOV LCD_D7, C
;__Lib_Lcd.c,26 :: 		
0x00B5	0xE515    	MOV A, FARG_Lcd_Cmd_out_char
0x00B7	0x5404    	ANL A, #4
0x00B9	0xF8      	MOV R0, A
0x00BA	0x630004  	XRL R0, #4
0x00BD	0xE8      	MOV A, R0
0x00BE	0x6004    	JZ L__Lcd_Cmd34
0x00C0	0x7800    	MOV R0, #0
0x00C2	0x8002    	SJMP L__Lcd_Cmd35
L__Lcd_Cmd34:
0x00C4	0x7801    	MOV R0, #1
L__Lcd_Cmd35:
0x00C6	0xE8      	MOV A, R0
0x00C7	0x13      	RRC A
0x00C8	0x9284    	MOV LCD_D6, C
;__Lib_Lcd.c,27 :: 		
0x00CA	0xE515    	MOV A, FARG_Lcd_Cmd_out_char
0x00CC	0x5402    	ANL A, #2
0x00CE	0xF8      	MOV R0, A
0x00CF	0x630002  	XRL R0, #2
0x00D2	0xE8      	MOV A, R0
0x00D3	0x6004    	JZ L__Lcd_Cmd36
0x00D5	0x7800    	MOV R0, #0
0x00D7	0x8002    	SJMP L__Lcd_Cmd37
L__Lcd_Cmd36:
0x00D9	0x7801    	MOV R0, #1
L__Lcd_Cmd37:
0x00DB	0xE8      	MOV A, R0
0x00DC	0x13      	RRC A
0x00DD	0x9283    	MOV LCD_D5, C
;__Lib_Lcd.c,28 :: 		
0x00DF	0xE515    	MOV A, FARG_Lcd_Cmd_out_char
0x00E1	0x5401    	ANL A, #1
0x00E3	0xF8      	MOV R0, A
0x00E4	0x630001  	XRL R0, #1
0x00E7	0xE8      	MOV A, R0
0x00E8	0x6004    	JZ L__Lcd_Cmd38
0x00EA	0x7800    	MOV R0, #0
0x00EC	0x8002    	SJMP L__Lcd_Cmd39
L__Lcd_Cmd38:
0x00EE	0x7801    	MOV R0, #1
L__Lcd_Cmd39:
0x00F0	0xE8      	MOV A, R0
0x00F1	0x13      	RRC A
0x00F2	0x9282    	MOV LCD_D4, C
;__Lib_Lcd.c,30 :: 		
0x00F4	0xE50C    	MOV A, _cmd_status
0x00F6	0x6004    	JZ L_Lcd_Cmd2
0x00F8	0x7800    	MOV R0, #0
0x00FA	0x8002    	SJMP L_Lcd_Cmd3
L_Lcd_Cmd2:
0x00FC	0x7801    	MOV R0, #1
L_Lcd_Cmd3:
0x00FE	0xE8      	MOV A, R0
0x00FF	0x13      	RRC A
0x0100	0x9280    	MOV LCD_RS, C
;__Lib_Lcd.c,32 :: 		
0x0102	0xD281    	SETB LCD_EN
;__Lib_Lcd.c,33 :: 		
0x0104	0x1136    	ACALL _Delay_1us
;__Lib_Lcd.c,34 :: 		
0x0106	0xC281    	CLR LCD_EN
;__Lib_Lcd.c,36 :: 		
0x0108	0xE50C    	MOV A, _cmd_status
0x010A	0x6004    	JZ L_Lcd_Cmd4
;__Lib_Lcd.c,37 :: 		
0x010C	0x1126    	ACALL _Delay_5500us
0x010E	0x8002    	SJMP L_Lcd_Cmd5
L_Lcd_Cmd4:
;__Lib_Lcd.c,39 :: 		
0x0110	0x1130    	ACALL _Delay_50us
L_Lcd_Cmd5:
;__Lib_Lcd.c,40 :: 		
0x0112	0x22      	RET
; end of _Lcd_Cmd
_Lcd_Chr_CP:
;__Lib_Lcd.c,42 :: 		
;__Lib_Lcd.c,44 :: 		
0x0113	0x750C00  	MOV _cmd_status, #0
;__Lib_Lcd.c,45 :: 		
0x0116	0x851415  	MOV FARG_Lcd_Cmd_out_char, FARG_Lcd_Chr_CP_out_char+0
0x0119	0x1138    	ACALL _Lcd_Cmd
;__Lib_Lcd.c,46 :: 		
0x011B	0x750C01  	MOV _cmd_status, #1
;__Lib_Lcd.c,47 :: 		
0x011E	0x22      	RET
; end of _Lcd_Chr_CP
_abs:
;__Lib_CStdlib.c,37 :: 		
;__Lib_CStdlib.c,38 :: 		
0x011F	0xC3      	CLR C
0x0120	0xE510    	MOV A, FARG_abs_a
0x0122	0x9400    	SUBB A, #0
0x0124	0x7400    	MOV A, #0
0x0126	0x6480    	XRL A, #128
0x0128	0xF8      	MOV R0, A
0x0129	0xE511    	MOV A, FARG_abs_a+1
0x012B	0x6480    	XRL A, #128
0x012D	0x98      	SUBB A, R0
0x012E	0x500C    	JNC L_abs0
;__Lib_CStdlib.c,39 :: 		
0x0130	0xC3      	CLR C
0x0131	0x7400    	MOV A, #0
0x0133	0x9510    	SUBB A, FARG_abs_a
0x0135	0xF8      	MOV R0, A
0x0136	0x7400    	MOV A, #0
0x0138	0x9511    	SUBB A, FARG_abs_a+1
0x013A	0xF9      	MOV R1, A
0x013B	0x22      	RET
L_abs0:
;__Lib_CStdlib.c,40 :: 		
0x013C	0xA810    	MOV R0, FARG_abs_a
0x013E	0xA911    	MOV R1, FARG_abs_a+1
;__Lib_CStdlib.c,41 :: 		
0x0140	0x22      	RET
; end of _abs
_LCD_Out:
;__Lib_Lcd.c,176 :: 		
;__Lib_Lcd.c,179 :: 		
0x0141	0x8019    	SJMP L_LCD_Out15
;__Lib_Lcd.c,180 :: 		
L_LCD_Out17:
0x0143	0x751080  	MOV FARG_LCD_Out_row, #128
0x0146	0x802E    	SJMP L_LCD_Out16
;__Lib_Lcd.c,181 :: 		
L_LCD_Out18:
0x0148	0x7510C0  	MOV FARG_LCD_Out_row, #192
0x014B	0x8029    	SJMP L_LCD_Out16
;__Lib_Lcd.c,182 :: 		
L_LCD_Out19:
0x014D	0x751094  	MOV FARG_LCD_Out_row, #148
0x0150	0x8024    	SJMP L_LCD_Out16
;__Lib_Lcd.c,183 :: 		
L_LCD_Out20:
0x0152	0x7510D4  	MOV FARG_LCD_Out_row, #212
0x0155	0x801F    	SJMP L_LCD_Out16
;__Lib_Lcd.c,184 :: 		
L_LCD_Out21:
0x0157	0x751080  	MOV FARG_LCD_Out_row, #128
;__Lib_Lcd.c,185 :: 		
0x015A	0x801A    	SJMP L_LCD_Out16
L_LCD_Out15:
0x015C	0xE510    	MOV A, FARG_LCD_Out_row
0x015E	0x6401    	XRL A, #1
0x0160	0x60E1    	JZ L_LCD_Out17
0x0162	0xE510    	MOV A, FARG_LCD_Out_row
0x0164	0x6402    	XRL A, #2
0x0166	0x60E0    	JZ L_LCD_Out18
0x0168	0xE510    	MOV A, FARG_LCD_Out_row
0x016A	0x6403    	XRL A, #3
0x016C	0x60DF    	JZ L_LCD_Out19
0x016E	0xE510    	MOV A, FARG_LCD_Out_row
0x0170	0x6404    	XRL A, #4
0x0172	0x60DE    	JZ L_LCD_Out20
0x0174	0x80E1    	SJMP L_LCD_Out21
L_LCD_Out16:
;__Lib_Lcd.c,186 :: 		
0x0176	0xC3      	CLR C
0x0177	0xE511    	MOV A, FARG_LCD_Out_column
0x0179	0x9401    	SUBB A, #1
0x017B	0xF8      	MOV R0, A
0x017C	0xE510    	MOV A, FARG_LCD_Out_row
0x017E	0x28      	ADD A, R0
0x017F	0xF8      	MOV R0, A
0x0180	0x850010  	MOV FARG_LCD_Out_row, 0
;__Lib_Lcd.c,188 :: 		
0x0183	0x850015  	MOV FARG_Lcd_Cmd_out_char, 0
0x0186	0x1138    	ACALL _Lcd_Cmd
;__Lib_Lcd.c,189 :: 		
0x0188	0x750C00  	MOV _cmd_status, #0
;__Lib_Lcd.c,190 :: 		
0x018B	0x751300  	MOV LCD_Out_i_L0, #0
;__Lib_Lcd.c,191 :: 		
L_LCD_Out22:
0x018E	0xE512    	MOV A, FARG_LCD_Out_text
0x0190	0x2513    	ADD A, LCD_Out_i_L0
0x0192	0xF8      	MOV R0, A
0x0193	0xE6      	MOV A, @R0
0x0194	0x600D    	JZ L_LCD_Out23
;__Lib_Lcd.c,192 :: 		
0x0196	0xE512    	MOV A, FARG_LCD_Out_text
0x0198	0x2513    	ADD A, LCD_Out_i_L0
0x019A	0xF8      	MOV R0, A
0x019B	0x8614    	MOV FARG_Lcd_Chr_CP_out_char, @R0
0x019D	0x3113    	ACALL _Lcd_Chr_CP
0x019F	0x0513    	INC LCD_Out_i_L0
0x01A1	0x80EB    	SJMP L_LCD_Out22
L_LCD_Out23:
;__Lib_Lcd.c,193 :: 		
0x01A3	0x750C01  	MOV _cmd_status, #1
;__Lib_Lcd.c,194 :: 		
0x01A6	0x22      	RET
; end of _LCD_Out
_open_door:
;Elevator.c,214 :: 		void open_door(void)
;Elevator.c,216 :: 		Lcd_Out(1,1, "Open ");
0x01A7	0x751001  	MOV FARG_LCD_Out_row, #1
0x01AA	0x751101  	MOV FARG_LCD_Out_column, #1
0x01AD	0x751231  	MOV FARG_LCD_Out_text, lo_addr(?lstr2_Elevator)
0x01B0	0x3141    	ACALL _LCD_Out
;Elevator.c,217 :: 		P1.B2=1;
0x01B2	0xD292    	SETB P1.B2
;Elevator.c,218 :: 		delay_ms(1);
0x01B4	0x7E02    	MOV R6, 2
0x01B6	0x7F9D    	MOV R7, 157
0x01B8	0xDFFE    	DJNZ R7, PC-2
0x01BA	0xDEFC    	DJNZ R6, PC-4
0x01BC	0x00      	NOP
;Elevator.c,219 :: 		P1.B2=0;
0x01BD	0xC292    	CLR P1.B2
;Elevator.c,220 :: 		delay_ms(2);
0x01BF	0x7E04    	MOV R6, 4
0x01C1	0x7F3C    	MOV R7, 60
0x01C3	0xDFFE    	DJNZ R7, PC-2
0x01C5	0xDEFC    	DJNZ R6, PC-4
0x01C7	0x00      	NOP
;Elevator.c,221 :: 		IE = 0x87;
0x01C8	0x75A887  	MOV IE, #135
;Elevator.c,223 :: 		}
0x01CB	0x22      	RET
; end of _open_door
_deduce_want:
;Elevator.c,153 :: 		void deduce_want(char index){
;Elevator.c,154 :: 		for(z =0; z<4; z++)
0x01CC	0x754B00  	MOV _z, #0
L_deduce_want17:
0x01CF	0xC3      	CLR C
0x01D0	0xE54B    	MOV A, _z
0x01D2	0x9404    	SUBB A, #4
0x01D4	0x5019    	JNC L_deduce_want18
;Elevator.c,156 :: 		if(flag[z] ==1 && z!= index)
0x01D6	0x7447    	MOV A, lo_addr(_flag)
0x01D8	0x254B    	ADD A, _z
0x01DA	0xF8      	MOV R0, A
0x01DB	0x8601    	MOV R1, @R0
0x01DD	0xE9      	MOV A, R1
0x01DE	0x6401    	XRL A, #1
0x01E0	0x7009    	JNZ L_deduce_want22
0x01E2	0xE54B    	MOV A, _z
0x01E4	0x650F    	XRL A, FARG_deduce_want_index
0x01E6	0x6003    	JZ L_deduce_want22
L__deduce_want49:
;Elevator.c,157 :: 		wanted2 = z;
0x01E8	0x854B6E  	MOV _wanted2, _z+0
L_deduce_want22:
;Elevator.c,154 :: 		for(z =0; z<4; z++)
0x01EB	0x054B    	INC _z
;Elevator.c,158 :: 		}
0x01ED	0x80E0    	SJMP L_deduce_want17
L_deduce_want18:
;Elevator.c,159 :: 		if((wanted - current) > 0)
0x01EF	0xC3      	CLR C
0x01F0	0xE509    	MOV A, _wanted
0x01F2	0x950B    	SUBB A, _current
0x01F4	0xF9      	MOV R1, A
0x01F5	0xE4      	CLR A
0x01F6	0x9400    	SUBB A, #0
0x01F8	0xFA      	MOV R2, A
0x01F9	0xD3      	SETB C
0x01FA	0xE9      	MOV A, R1
0x01FB	0x9400    	SUBB A, #0
0x01FD	0x7400    	MOV A, #0
0x01FF	0x6480    	XRL A, #128
0x0201	0xF8      	MOV R0, A
0x0202	0xEA      	MOV A, R2
0x0203	0x6480    	XRL A, #128
0x0205	0x98      	SUBB A, R0
0x0206	0x4005    	JC L_deduce_want23
;Elevator.c,160 :: 		direc1 = 1;
0x0208	0x750A01  	MOV _direc1, #1
0x020B	0x8003    	SJMP L_deduce_want24
L_deduce_want23:
;Elevator.c,162 :: 		direc1 = -1;
0x020D	0x750AFF  	MOV _direc1, #255
L_deduce_want24:
;Elevator.c,163 :: 		if((wanted2 - current) > 0)
0x0210	0xC3      	CLR C
0x0211	0xE56E    	MOV A, _wanted2
0x0213	0x950B    	SUBB A, _current
0x0215	0xF9      	MOV R1, A
0x0216	0xE4      	CLR A
0x0217	0x9400    	SUBB A, #0
0x0219	0xFA      	MOV R2, A
0x021A	0xD3      	SETB C
0x021B	0xE9      	MOV A, R1
0x021C	0x9400    	SUBB A, #0
0x021E	0x7400    	MOV A, #0
0x0220	0x6480    	XRL A, #128
0x0222	0xF8      	MOV R0, A
0x0223	0xEA      	MOV A, R2
0x0224	0x6480    	XRL A, #128
0x0226	0x98      	SUBB A, R0
0x0227	0x4005    	JC L_deduce_want25
;Elevator.c,164 :: 		direc2 = 1 * state;
0x0229	0x855D5C  	MOV _direc2, _state+0
0x022C	0x800A    	SJMP L_deduce_want26
L_deduce_want25:
;Elevator.c,166 :: 		direc2 = -1 * state;
0x022E	0x855DF0  	MOV B, _state+0
0x0231	0x74FF    	MOV A, #255
0x0233	0xA4      	MUL AB
0x0234	0xF8      	MOV R0, A
0x0235	0x85005C  	MOV _direc2, 0
L_deduce_want26:
;Elevator.c,167 :: 		if(direc1 == direc2)
0x0238	0xE50A    	MOV A, _direc1
0x023A	0x655C    	XRL A, _direc2
0x023C	0x7014    	JNZ L_deduce_want27
;Elevator.c,169 :: 		wanted = wanted2;
0x023E	0x856E09  	MOV _wanted, _wanted2+0
;Elevator.c,170 :: 		time = abs(wanted - current);
0x0241	0xC3      	CLR C
0x0242	0xE56E    	MOV A, _wanted2
0x0244	0x950B    	SUBB A, _current
0x0246	0xF510    	MOV FARG_abs_a, A
0x0248	0xE4      	CLR A
0x0249	0x9400    	SUBB A, #0
0x024B	0xF511    	MOV FARG_abs_a+1, A
0x024D	0x311F    	ACALL _abs
0x024F	0x850008  	MOV _time, 0
;Elevator.c,171 :: 		}
L_deduce_want27:
;Elevator.c,172 :: 		}
0x0252	0x22      	RET
; end of _deduce_want
_Sevenseg:
;Elevator.c,248 :: 		void Sevenseg(char x)
;Elevator.c,250 :: 		P1 &= 0x0f;
0x0253	0x53900F  	ANL P1, #15
;Elevator.c,251 :: 		switch(x)
0x0256	0x8011    	SJMP L_Sevenseg35
;Elevator.c,253 :: 		case 1:
L_Sevenseg37:
;Elevator.c,255 :: 		P1|=0b10000000;
0x0258	0x439080  	ORL P1, #128
;Elevator.c,256 :: 		}break;
0x025B	0x8022    	SJMP L_Sevenseg36
;Elevator.c,257 :: 		case 2:
L_Sevenseg38:
;Elevator.c,259 :: 		P1|=0b01000000;
0x025D	0x439040  	ORL P1, #64
;Elevator.c,260 :: 		}break;
0x0260	0x801D    	SJMP L_Sevenseg36
;Elevator.c,261 :: 		case 3:
L_Sevenseg39:
;Elevator.c,263 :: 		P1|=0b11000000;
0x0262	0x4390C0  	ORL P1, #192
;Elevator.c,264 :: 		}break;
0x0265	0x8018    	SJMP L_Sevenseg36
;Elevator.c,265 :: 		case 0:
L_Sevenseg40:
;Elevator.c,267 :: 		P1|=0b00000000;
;Elevator.c,268 :: 		}break;
0x0267	0x8016    	SJMP L_Sevenseg36
;Elevator.c,269 :: 		}
L_Sevenseg35:
0x0269	0xE50F    	MOV A, FARG_Sevenseg_x
0x026B	0x6401    	XRL A, #1
0x026D	0x60E9    	JZ L_Sevenseg37
0x026F	0xE50F    	MOV A, FARG_Sevenseg_x
0x0271	0x6402    	XRL A, #2
0x0273	0x60E8    	JZ L_Sevenseg38
0x0275	0xE50F    	MOV A, FARG_Sevenseg_x
0x0277	0x6403    	XRL A, #3
0x0279	0x60E7    	JZ L_Sevenseg39
0x027B	0xE50F    	MOV A, FARG_Sevenseg_x
0x027D	0x60E8    	JZ L_Sevenseg40
L_Sevenseg36:
;Elevator.c,270 :: 		}
0x027F	0x22      	RET
; end of _Sevenseg
_delay1:
;Elevator.c,293 :: 		void delay1(void)
;Elevator.c,295 :: 		while(flag2)
L_delay147:
0x0280	0xE54C    	MOV A, _flag2
0x0282	0x6012    	JZ L_delay148
;Elevator.c,297 :: 		flag2 = 0;
0x0284	0x754C00  	MOV _flag2, #0
;Elevator.c,298 :: 		delay_ms(3000);
0x0287	0x7D13    	MOV R5, 19
0x0289	0x7E00    	MOV R6, 0
0x028B	0x7FBB    	MOV R7, 187
0x028D	0xDFFE    	DJNZ R7, PC-2
0x028F	0xDEFC    	DJNZ R6, PC-4
0x0291	0xDDFA    	DJNZ R5, PC-6
0x0293	0x00      	NOP
;Elevator.c,299 :: 		}
0x0294	0x80EA    	SJMP L_delay147
L_delay148:
;Elevator.c,300 :: 		}
0x0296	0x22      	RET
; end of _delay1
_close_door:
;Elevator.c,204 :: 		void close_door(void)
;Elevator.c,206 :: 		Lcd_Out(1,1, "Close");
0x0297	0x751001  	MOV FARG_LCD_Out_row, #1
0x029A	0x751101  	MOV FARG_LCD_Out_column, #1
0x029D	0x75124D  	MOV FARG_LCD_Out_text, lo_addr(?lstr1_Elevator)
0x02A0	0x3141    	ACALL _LCD_Out
;Elevator.c,207 :: 		P1.B2=1;
0x02A2	0xD292    	SETB P1.B2
;Elevator.c,208 :: 		delay_ms(2);
0x02A4	0x7E04    	MOV R6, 4
0x02A6	0x7F3C    	MOV R7, 60
0x02A8	0xDFFE    	DJNZ R7, PC-2
0x02AA	0xDEFC    	DJNZ R6, PC-4
0x02AC	0x00      	NOP
;Elevator.c,209 :: 		P1.B2=0;
0x02AD	0xC292    	CLR P1.B2
;Elevator.c,210 :: 		delay_ms(2);
0x02AF	0x7E04    	MOV R6, 4
0x02B1	0x7F3C    	MOV R7, 60
0x02B3	0xDFFE    	DJNZ R7, PC-2
0x02B5	0xDEFC    	DJNZ R6, PC-4
0x02B7	0x00      	NOP
;Elevator.c,211 :: 		IE = 0x82;
0x02B8	0x75A882  	MOV IE, #130
;Elevator.c,213 :: 		}
0x02BB	0x22      	RET
; end of _close_door
_move_elevat:
;Elevator.c,224 :: 		void move_elevat(signed char direction)
;Elevator.c,227 :: 		if(direction > 0)
0x02BC	0xD3      	SETB C
0x02BD	0x7400    	MOV A, #0
0x02BF	0x6480    	XRL A, #128
0x02C1	0xF8      	MOV R0, A
0x02C2	0xE50F    	MOV A, FARG_move_elevat_direction
0x02C4	0x6480    	XRL A, #128
0x02C6	0x98      	SUBB A, R0
0x02C7	0x401D    	JC L_move_elevat33
;Elevator.c,229 :: 		Lcd_Out(1,1, "Up   ");
0x02C9	0x751001  	MOV FARG_LCD_Out_row, #1
0x02CC	0x751101  	MOV FARG_LCD_Out_column, #1
0x02CF	0x75126F  	MOV FARG_LCD_Out_text, lo_addr(?lstr3_Elevator)
0x02D2	0x3141    	ACALL _LCD_Out
;Elevator.c,230 :: 		P1.B0=1;
0x02D4	0xD290    	SETB P1.B0
;Elevator.c,231 :: 		P1.B1=0;
0x02D6	0xC291    	CLR P1.B1
;Elevator.c,232 :: 		delay_ms(2000);
0x02D8	0x7D0D    	MOV R5, 13
0x02DA	0x7EAB    	MOV R6, 171
0x02DC	0x7F7C    	MOV R7, 124
0x02DE	0xDFFE    	DJNZ R7, PC-2
0x02E0	0xDEFC    	DJNZ R6, PC-4
0x02E2	0xDDFA    	DJNZ R5, PC-6
;Elevator.c,235 :: 		}
0x02E4	0x801B    	SJMP L_move_elevat34
L_move_elevat33:
;Elevator.c,238 :: 		Lcd_Out(1,1, "Down ");
0x02E6	0x751001  	MOV FARG_LCD_Out_row, #1
0x02E9	0x751101  	MOV FARG_LCD_Out_column, #1
0x02EC	0x751268  	MOV FARG_LCD_Out_text, lo_addr(?lstr4_Elevator)
0x02EF	0x3141    	ACALL _LCD_Out
;Elevator.c,239 :: 		P1.B0=0;
0x02F1	0xC290    	CLR P1.B0
;Elevator.c,240 :: 		P1.B1=1;
0x02F3	0xD291    	SETB P1.B1
;Elevator.c,241 :: 		delay_ms(2000);
0x02F5	0x7D0D    	MOV R5, 13
0x02F7	0x7EAB    	MOV R6, 171
0x02F9	0x7F7C    	MOV R7, 124
0x02FB	0xDFFE    	DJNZ R7, PC-2
0x02FD	0xDEFC    	DJNZ R6, PC-4
0x02FF	0xDDFA    	DJNZ R5, PC-6
;Elevator.c,244 :: 		}
L_move_elevat34:
;Elevator.c,246 :: 		}
0x0301	0x22      	RET
; end of _move_elevat
_stringtxt:
;Elevator.c,271 :: 		void stringtxt(char x)
;Elevator.c,273 :: 		switch(x)
0x0302	0x8034    	SJMP L_stringtxt41
;Elevator.c,275 :: 		case 1:
L_stringtxt43:
;Elevator.c,277 :: 		Lcd_Out(2,1, "Go to 1");
0x0304	0x751002  	MOV FARG_LCD_Out_row, #2
0x0307	0x751101  	MOV FARG_LCD_Out_column, #1
0x030A	0x751254  	MOV FARG_LCD_Out_text, lo_addr(?lstr5_Elevator)
0x030D	0x3141    	ACALL _LCD_Out
;Elevator.c,278 :: 		}break;
0x030F	0x803D    	SJMP L_stringtxt42
;Elevator.c,279 :: 		case 2:
L_stringtxt44:
;Elevator.c,281 :: 		Lcd_Out(2,1, " Go to 2");
0x0311	0x751002  	MOV FARG_LCD_Out_row, #2
0x0314	0x751101  	MOV FARG_LCD_Out_column, #1
0x0317	0x75125E  	MOV FARG_LCD_Out_text, lo_addr(?lstr6_Elevator)
0x031A	0x3141    	ACALL _LCD_Out
;Elevator.c,282 :: 		}break;
0x031C	0x8030    	SJMP L_stringtxt42
;Elevator.c,283 :: 		case 3:
L_stringtxt45:
;Elevator.c,285 :: 		Lcd_Out(2,1, "Go to 3");
0x031E	0x751002  	MOV FARG_LCD_Out_row, #2
0x0321	0x751101  	MOV FARG_LCD_Out_column, #1
0x0324	0x75123F  	MOV FARG_LCD_Out_text, lo_addr(?lstr7_Elevator)
0x0327	0x3141    	ACALL _LCD_Out
;Elevator.c,286 :: 		}break;
0x0329	0x8023    	SJMP L_stringtxt42
;Elevator.c,287 :: 		case 0:
L_stringtxt46:
;Elevator.c,289 :: 		Lcd_Out(2,1, "Go to 0");
0x032B	0x751002  	MOV FARG_LCD_Out_row, #2
0x032E	0x751101  	MOV FARG_LCD_Out_column, #1
0x0331	0x751237  	MOV FARG_LCD_Out_text, lo_addr(?lstr8_Elevator)
0x0334	0x3141    	ACALL _LCD_Out
;Elevator.c,290 :: 		}break;
0x0336	0x8016    	SJMP L_stringtxt42
;Elevator.c,291 :: 		}
L_stringtxt41:
0x0338	0xE50F    	MOV A, FARG_stringtxt_x
0x033A	0x6401    	XRL A, #1
0x033C	0x60C6    	JZ L_stringtxt43
0x033E	0xE50F    	MOV A, FARG_stringtxt_x
0x0340	0x6402    	XRL A, #2
0x0342	0x60CD    	JZ L_stringtxt44
0x0344	0xE50F    	MOV A, FARG_stringtxt_x
0x0346	0x6403    	XRL A, #3
0x0348	0x60D4    	JZ L_stringtxt45
0x034A	0xE50F    	MOV A, FARG_stringtxt_x
0x034C	0x60DD    	JZ L_stringtxt46
L_stringtxt42:
;Elevator.c,292 :: 		}
0x034E	0x22      	RET
; end of _stringtxt
___CC2D:
;__Lib_System.c,13 :: 		
;__Lib_System.c,15 :: 		
_CC2D_Loop1:
;__Lib_System.c,16 :: 		
0x034F	0xE4      	CLR A
;__Lib_System.c,17 :: 		
0x0350	0x93      	MOVC A, @A+DPTR
;__Lib_System.c,18 :: 		
0x0351	0xF6      	MOV @R0, A
;__Lib_System.c,19 :: 		
0x0352	0x08      	INC R0
;__Lib_System.c,20 :: 		
0x0353	0xA3      	INC DPTR
;__Lib_System.c,21 :: 		
0x0354	0xD9F9    	DJNZ R1, _CC2D_Loop1
;__Lib_System.c,23 :: 		
0x0356	0x22      	RET
; end of ___CC2D
_Lcd_Init:
;__Lib_Lcd.c,76 :: 		
;__Lib_Lcd.c,78 :: 		
0x0357	0xC281    	CLR LCD_EN
;__Lib_Lcd.c,80 :: 		
0x0359	0xC280    	CLR LCD_RS
;__Lib_Lcd.c,83 :: 		
0x035B	0x1126    	ACALL _Delay_5500us
;__Lib_Lcd.c,84 :: 		
0x035D	0x1126    	ACALL _Delay_5500us
;__Lib_Lcd.c,85 :: 		
0x035F	0x1126    	ACALL _Delay_5500us
;__Lib_Lcd.c,87 :: 		
0x0361	0xC285    	CLR LCD_D7
;__Lib_Lcd.c,88 :: 		
0x0363	0xC284    	CLR LCD_D6
;__Lib_Lcd.c,89 :: 		
0x0365	0xC283    	CLR LCD_D5
;__Lib_Lcd.c,90 :: 		
0x0367	0xC282    	CLR LCD_D4
;__Lib_Lcd.c,93 :: 		
0x0369	0xD283    	SETB LCD_D5
;__Lib_Lcd.c,94 :: 		
0x036B	0xD282    	SETB LCD_D4
;__Lib_Lcd.c,95 :: 		
0x036D	0xD281    	SETB LCD_EN
;__Lib_Lcd.c,96 :: 		
0x036F	0x1136    	ACALL _Delay_1us
;__Lib_Lcd.c,97 :: 		
0x0371	0xC281    	CLR LCD_EN
;__Lib_Lcd.c,98 :: 		
0x0373	0x1126    	ACALL _Delay_5500us
;__Lib_Lcd.c,100 :: 		
0x0375	0xD281    	SETB LCD_EN
;__Lib_Lcd.c,101 :: 		
0x0377	0x1136    	ACALL _Delay_1us
;__Lib_Lcd.c,102 :: 		
0x0379	0xC281    	CLR LCD_EN
;__Lib_Lcd.c,103 :: 		
0x037B	0x1126    	ACALL _Delay_5500us
;__Lib_Lcd.c,105 :: 		
0x037D	0xD281    	SETB LCD_EN
;__Lib_Lcd.c,106 :: 		
0x037F	0x1136    	ACALL _Delay_1us
;__Lib_Lcd.c,107 :: 		
0x0381	0xC281    	CLR LCD_EN
;__Lib_Lcd.c,108 :: 		
0x0383	0x1126    	ACALL _Delay_5500us
;__Lib_Lcd.c,111 :: 		
0x0385	0xD283    	SETB LCD_D5
;__Lib_Lcd.c,112 :: 		
0x0387	0xC282    	CLR LCD_D4
;__Lib_Lcd.c,113 :: 		
0x0389	0xD281    	SETB LCD_EN
;__Lib_Lcd.c,114 :: 		
0x038B	0x1136    	ACALL _Delay_1us
;__Lib_Lcd.c,115 :: 		
0x038D	0xC281    	CLR LCD_EN
;__Lib_Lcd.c,116 :: 		
0x038F	0x1126    	ACALL _Delay_5500us
;__Lib_Lcd.c,119 :: 		
0x0391	0xC285    	CLR LCD_D7
;__Lib_Lcd.c,120 :: 		
0x0393	0xC284    	CLR LCD_D6
;__Lib_Lcd.c,121 :: 		
0x0395	0xC283    	CLR LCD_D5
;__Lib_Lcd.c,122 :: 		
0x0397	0xD283    	SETB LCD_D5
;__Lib_Lcd.c,123 :: 		
0x0399	0xC282    	CLR LCD_D4
;__Lib_Lcd.c,124 :: 		
0x039B	0xD281    	SETB LCD_EN
;__Lib_Lcd.c,125 :: 		
0x039D	0x1136    	ACALL _Delay_1us
;__Lib_Lcd.c,126 :: 		
0x039F	0xC281    	CLR LCD_EN
;__Lib_Lcd.c,127 :: 		
0x03A1	0xC283    	CLR LCD_D5
;__Lib_Lcd.c,128 :: 		
0x03A3	0xD285    	SETB LCD_D7
;__Lib_Lcd.c,129 :: 		
0x03A5	0xD281    	SETB LCD_EN
;__Lib_Lcd.c,130 :: 		
0x03A7	0x1136    	ACALL _Delay_1us
;__Lib_Lcd.c,131 :: 		
0x03A9	0xC281    	CLR LCD_EN
;__Lib_Lcd.c,132 :: 		
0x03AB	0x1126    	ACALL _Delay_5500us
;__Lib_Lcd.c,135 :: 		
0x03AD	0xC285    	CLR LCD_D7
;__Lib_Lcd.c,136 :: 		
0x03AF	0xD282    	SETB LCD_D4
;__Lib_Lcd.c,137 :: 		
0x03B1	0xD281    	SETB LCD_EN
;__Lib_Lcd.c,138 :: 		
0x03B3	0x1136    	ACALL _Delay_1us
;__Lib_Lcd.c,139 :: 		
0x03B5	0xC281    	CLR LCD_EN
;__Lib_Lcd.c,140 :: 		
0x03B7	0xC282    	CLR LCD_D4
;__Lib_Lcd.c,141 :: 		
0x03B9	0xD281    	SETB LCD_EN
;__Lib_Lcd.c,142 :: 		
0x03BB	0x1136    	ACALL _Delay_1us
;__Lib_Lcd.c,143 :: 		
0x03BD	0xC281    	CLR LCD_EN
;__Lib_Lcd.c,144 :: 		
0x03BF	0x1126    	ACALL _Delay_5500us
;__Lib_Lcd.c,147 :: 		
0x03C1	0xC282    	CLR LCD_D4
;__Lib_Lcd.c,148 :: 		
0x03C3	0xD281    	SETB LCD_EN
;__Lib_Lcd.c,149 :: 		
0x03C5	0x1136    	ACALL _Delay_1us
;__Lib_Lcd.c,150 :: 		
0x03C7	0xC281    	CLR LCD_EN
;__Lib_Lcd.c,151 :: 		
0x03C9	0xD282    	SETB LCD_D4
;__Lib_Lcd.c,152 :: 		
0x03CB	0xD281    	SETB LCD_EN
;__Lib_Lcd.c,153 :: 		
0x03CD	0x1136    	ACALL _Delay_1us
;__Lib_Lcd.c,154 :: 		
0x03CF	0xC281    	CLR LCD_EN
;__Lib_Lcd.c,155 :: 		
0x03D1	0x1126    	ACALL _Delay_5500us
;__Lib_Lcd.c,158 :: 		
0x03D3	0xC282    	CLR LCD_D4
;__Lib_Lcd.c,159 :: 		
0x03D5	0xD281    	SETB LCD_EN
;__Lib_Lcd.c,160 :: 		
0x03D7	0x1136    	ACALL _Delay_1us
;__Lib_Lcd.c,161 :: 		
0x03D9	0xC281    	CLR LCD_EN
;__Lib_Lcd.c,163 :: 		
0x03DB	0xD285    	SETB LCD_D7
;__Lib_Lcd.c,164 :: 		
0x03DD	0xD284    	SETB LCD_D6
;__Lib_Lcd.c,165 :: 		
0x03DF	0xD283    	SETB LCD_D5
;__Lib_Lcd.c,166 :: 		
0x03E1	0xD282    	SETB LCD_D4
;__Lib_Lcd.c,167 :: 		
0x03E3	0xD281    	SETB LCD_EN
;__Lib_Lcd.c,168 :: 		
0x03E5	0x1136    	ACALL _Delay_1us
;__Lib_Lcd.c,169 :: 		
0x03E7	0xC281    	CLR LCD_EN
;__Lib_Lcd.c,171 :: 		
0x03E9	0x1126    	ACALL _Delay_5500us
;__Lib_Lcd.c,173 :: 		
0x03EB	0x750C01  	MOV _cmd_status, #1
;__Lib_Lcd.c,174 :: 		
0x03EE	0x22      	RET
; end of _Lcd_Init
_moving:
;Elevator.c,173 :: 		void moving (int index)
;Elevator.c,175 :: 		Sevenseg(current);
0x03EF	0x850B0F  	MOV FARG_Sevenseg_x, _current+0
0x03F2	0x5153    	ACALL _Sevenseg
;Elevator.c,176 :: 		wanted = index;
0x03F4	0x850D09  	MOV _wanted, FARG_moving_index+0
;Elevator.c,177 :: 		flag2 = 1;
0x03F7	0x754C01  	MOV _flag2, #1
;Elevator.c,178 :: 		time = abs(wanted - current);
0x03FA	0xA80B    	MOV R0, _current
0x03FC	0xE4      	CLR A
0x03FD	0xF9      	MOV R1, A
0x03FE	0xC3      	CLR C
0x03FF	0xE50D    	MOV A, FARG_moving_index
0x0401	0x98      	SUBB A, R0
0x0402	0xF510    	MOV FARG_abs_a, A
0x0404	0xE4      	CLR A
0x0405	0x9400    	SUBB A, #0
0x0407	0xF511    	MOV FARG_abs_a+1, A
0x0409	0x311F    	ACALL _abs
0x040B	0x850008  	MOV _time, 0
;Elevator.c,179 :: 		if((wanted - current) > 0)
0x040E	0xC3      	CLR C
0x040F	0xE509    	MOV A, _wanted
0x0411	0x950B    	SUBB A, _current
0x0413	0xF9      	MOV R1, A
0x0414	0xE4      	CLR A
0x0415	0x9400    	SUBB A, #0
0x0417	0xFA      	MOV R2, A
0x0418	0xD3      	SETB C
0x0419	0xE9      	MOV A, R1
0x041A	0x9400    	SUBB A, #0
0x041C	0x7400    	MOV A, #0
0x041E	0x6480    	XRL A, #128
0x0420	0xF8      	MOV R0, A
0x0421	0xEA      	MOV A, R2
0x0422	0x6480    	XRL A, #128
0x0424	0x98      	SUBB A, R0
0x0425	0x4005    	JC L_moving28
;Elevator.c,180 :: 		direc = 1;
0x0427	0x755301  	MOV _direc, #1
0x042A	0x8003    	SJMP L_moving29
L_moving28:
;Elevator.c,182 :: 		direc = -1;
0x042C	0x7553FF  	MOV _direc, #255
L_moving29:
;Elevator.c,184 :: 		delay1();
0x042F	0x5180    	ACALL _delay1
;Elevator.c,185 :: 		close_door();
0x0431	0x5197    	ACALL _close_door
;Elevator.c,186 :: 		delay_ms(1000);
0x0433	0x7D07    	MOV R5, 7
0x0435	0x7E56    	MOV R6, 86
0x0437	0x7F3C    	MOV R7, 60
0x0439	0xDFFE    	DJNZ R7, PC-2
0x043B	0xDEFC    	DJNZ R6, PC-4
0x043D	0xDDFA    	DJNZ R5, PC-6
;Elevator.c,187 :: 		for( j = 0; j < time; j++)
0x043F	0x756700  	MOV _j, #0
L_moving30:
0x0442	0xC3      	CLR C
0x0443	0xE567    	MOV A, _j
0x0445	0x9508    	SUBB A, _time
0x0447	0x502C    	JNC L_moving31
;Elevator.c,189 :: 		deduce_want(index);
0x0449	0x850D0F  	MOV FARG_deduce_want_index, FARG_moving_index+0
0x044C	0x31CC    	ACALL _deduce_want
;Elevator.c,190 :: 		stringtxt(wanted);
0x044E	0x85090F  	MOV FARG_stringtxt_x, _wanted+0
0x0451	0x7102    	ACALL _stringtxt
;Elevator.c,191 :: 		move_elevat(direc);
0x0453	0x85530F  	MOV FARG_move_elevat_direction, _direc+0
0x0456	0x51BC    	ACALL _move_elevat
;Elevator.c,192 :: 		current+= direc;
0x0458	0xE50B    	MOV A, _current
0x045A	0x2553    	ADD A, _direc
0x045C	0xF8      	MOV R0, A
0x045D	0x85000B  	MOV _current, 0
;Elevator.c,193 :: 		Sevenseg(current);
0x0460	0x85000F  	MOV FARG_Sevenseg_x, 0
0x0463	0x5153    	ACALL _Sevenseg
;Elevator.c,194 :: 		delay_ms(500);
0x0465	0x7D04    	MOV R5, 4
0x0467	0x7E2B    	MOV R6, 43
0x0469	0x7F9D    	MOV R7, 157
0x046B	0xDFFE    	DJNZ R7, PC-2
0x046D	0xDEFC    	DJNZ R6, PC-4
0x046F	0xDDFA    	DJNZ R5, PC-6
;Elevator.c,187 :: 		for( j = 0; j < time; j++)
0x0471	0x0567    	INC _j
;Elevator.c,195 :: 		}
0x0473	0x80CD    	SJMP L_moving30
L_moving31:
;Elevator.c,196 :: 		P1.B0 =0;
0x0475	0xC290    	CLR P1.B0
;Elevator.c,197 :: 		P1.B1 =0;
0x0477	0xC291    	CLR P1.B1
;Elevator.c,198 :: 		flag[wanted] = 0;
0x0479	0x7447    	MOV A, lo_addr(_flag)
0x047B	0x2509    	ADD A, _wanted
0x047D	0xF8      	MOV R0, A
0x047E	0x7600    	MOV @R0, #0
;Elevator.c,199 :: 		delay_ms(1000);
0x0480	0x7D07    	MOV R5, 7
0x0482	0x7E56    	MOV R6, 86
0x0484	0x7F3C    	MOV R7, 60
0x0486	0xDFFE    	DJNZ R7, PC-2
0x0488	0xDEFC    	DJNZ R6, PC-4
0x048A	0xDDFA    	DJNZ R5, PC-6
;Elevator.c,200 :: 		open_door();
0x048C	0x31A7    	ACALL _open_door
;Elevator.c,201 :: 		delay_ms(500);
0x048E	0x7D04    	MOV R5, 4
0x0490	0x7E2B    	MOV R6, 43
0x0492	0x7F9D    	MOV R7, 157
0x0494	0xDFFE    	DJNZ R7, PC-2
0x0496	0xDEFC    	DJNZ R6, PC-4
0x0498	0xDDFA    	DJNZ R5, PC-6
;Elevator.c,202 :: 		}
0x049A	0x22      	RET
; end of _moving
_fsr_open:
0x049B	0xC005    	PUSH R5
0x049D	0xC006    	PUSH R6
0x049F	0xC007    	PUSH R7
0x04A1	0xC0D0    	PUSH PSW
0x04A3	0xC0E0    	PUSH ACC
0x04A5	0xC0F0    	PUSH B
0x04A7	0xC082    	PUSH DP0L
0x04A9	0xC083    	PUSH DP0H
;Elevator.c,30 :: 		void fsr_open() iv IVT_ADDR_EX0 ilevel 0 ics ICS_AUTO {
;Elevator.c,31 :: 		P1.B3 = 1;
0x04AB	0xD293    	SETB P1.B3
;Elevator.c,32 :: 		delay_ms(2000);
0x04AD	0x7D0D    	MOV R5, 13
0x04AF	0x7EAB    	MOV R6, 171
0x04B1	0x7F7C    	MOV R7, 124
0x04B3	0xDFFE    	DJNZ R7, PC-2
0x04B5	0xDEFC    	DJNZ R6, PC-4
0x04B7	0xDDFA    	DJNZ R5, PC-6
;Elevator.c,33 :: 		P1.B3 = 0;
0x04B9	0xC293    	CLR P1.B3
;Elevator.c,34 :: 		}
0x04BB	0xD083    	POP DP0H
0x04BD	0xD082    	POP DP0L
0x04BF	0xD0F0    	POP B
0x04C1	0xD0E0    	POP ACC
0x04C3	0xD0D0    	POP PSW
0x04C5	0xD007    	POP R7
0x04C7	0xD006    	POP R6
0x04C9	0xD005    	POP R5
0x04CB	0x32      	RETI
; end of _fsr_open
_door_open:
0x04CC	0xC005    	PUSH R5
0x04CE	0xC006    	PUSH R6
0x04D0	0xC007    	PUSH R7
0x04D2	0xC0D0    	PUSH PSW
0x04D4	0xC0E0    	PUSH ACC
0x04D6	0xC0F0    	PUSH B
0x04D8	0xC082    	PUSH DP0L
0x04DA	0xC083    	PUSH DP0H
;Elevator.c,23 :: 		void door_open() iv IVT_ADDR_EX1 ilevel 0 ics ICS_AUTO {
;Elevator.c,25 :: 		P1.B2=1;
0x04DC	0xD292    	SETB P1.B2
;Elevator.c,26 :: 		delay_ms(1);
0x04DE	0x7E02    	MOV R6, 2
0x04E0	0x7F9D    	MOV R7, 157
0x04E2	0xDFFE    	DJNZ R7, PC-2
0x04E4	0xDEFC    	DJNZ R6, PC-4
0x04E6	0x00      	NOP
;Elevator.c,27 :: 		P1.B2=0;
0x04E7	0xC292    	CLR P1.B2
;Elevator.c,28 :: 		delay_ms(5000);
0x04E9	0x7D20    	MOV R5, 32
0x04EB	0x7EAB    	MOV R6, 171
0x04ED	0x7F39    	MOV R7, 57
0x04EF	0xDFFE    	DJNZ R7, PC-2
0x04F1	0xDEFC    	DJNZ R6, PC-4
0x04F3	0xDDFA    	DJNZ R5, PC-6
;Elevator.c,29 :: 		}
0x04F5	0xD083    	POP DP0H
0x04F7	0xD082    	POP DP0L
0x04F9	0xD0F0    	POP B
0x04FB	0xD0E0    	POP ACC
0x04FD	0xD0D0    	POP PSW
0x04FF	0xD007    	POP R7
0x0501	0xD006    	POP R6
0x0503	0xD005    	POP R5
0x0505	0x32      	RETI
; end of _door_open
_main:
0x0506	0x758116  	MOV SP, #22
0x0509	0x12068B  	LCALL 1675
;Elevator.c,124 :: 		void main()
;Elevator.c,126 :: 		P1 = 0x00;
0x050C	0x759000  	MOV P1, #0
;Elevator.c,127 :: 		P3=0x00;
0x050F	0x75B000  	MOV P3, #0
;Elevator.c,128 :: 		P2=0xFF;
0x0512	0x75A0FF  	MOV P2, #255
;Elevator.c,129 :: 		TMOD=0x01;
0x0515	0x758901  	MOV TMOD, #1
;Elevator.c,130 :: 		IE=0x87;
0x0518	0x75A887  	MOV IE, #135
;Elevator.c,131 :: 		SCON = 0x50;
0x051B	0x759850  	MOV SCON, #80
;Elevator.c,132 :: 		TL0  = 0xE5;
0x051E	0x758AE5  	MOV TL0, #229
;Elevator.c,133 :: 		TH0  = 0xBE;
0x0521	0x758CBE  	MOV TH0, #190
;Elevator.c,134 :: 		TCON.B0 = 0;
0x0524	0xC288    	CLR TCON.B0
;Elevator.c,135 :: 		TCON.B2 = 1;
0x0526	0xD28A    	SETB TCON.B2
;Elevator.c,136 :: 		TCON.TR0  = 1;
0x0528	0xD28C    	SETB TCON.B4
;Elevator.c,137 :: 		Lcd_Init();
0x052A	0x7157    	ACALL _Lcd_Init
;Elevator.c,138 :: 		delay_ms(10);
0x052C	0x7E11    	MOV R6, 17
0x052E	0x7F34    	MOV R7, 52
0x0530	0xDFFE    	DJNZ R7, PC-2
0x0532	0xDEFC    	DJNZ R6, PC-4
0x0534	0x00      	NOP
;Elevator.c,139 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);
0x0535	0x75150C  	MOV FARG_Lcd_Cmd_out_char, #12
0x0538	0x1138    	ACALL _Lcd_Cmd
;Elevator.c,140 :: 		while(1)
L_main11:
;Elevator.c,142 :: 		lcd_Cmd(_LCD_CLEAR);
0x053A	0x751501  	MOV FARG_Lcd_Cmd_out_char, #1
0x053D	0x1138    	ACALL _Lcd_Cmd
;Elevator.c,143 :: 		delay_ms(1000);
0x053F	0x7D07    	MOV R5, 7
0x0541	0x7E56    	MOV R6, 86
0x0543	0x7F3C    	MOV R7, 60
0x0545	0xDFFE    	DJNZ R7, PC-2
0x0547	0xDEFC    	DJNZ R6, PC-4
0x0549	0xDDFA    	DJNZ R5, PC-6
;Elevator.c,144 :: 		for(i = 0; i <4 ; i++)
0x054B	0x753000  	MOV _i, #0
L_main13:
0x054E	0xC3      	CLR C
0x054F	0xE530    	MOV A, _i
0x0551	0x9404    	SUBB A, #4
0x0553	0x5018    	JNC L_main14
;Elevator.c,146 :: 		if(flag[i] == 1)
0x0555	0x7447    	MOV A, lo_addr(_flag)
0x0557	0x2530    	ADD A, _i
0x0559	0xF8      	MOV R0, A
0x055A	0x8601    	MOV R1, @R0
0x055C	0xE9      	MOV A, R1
0x055D	0x6401    	XRL A, #1
0x055F	0x7008    	JNZ L_main16
;Elevator.c,148 :: 		moving(i);
0x0561	0x85300D  	MOV FARG_moving_index, _i+0
0x0564	0xE4      	CLR A
0x0565	0xF50E    	MOV FARG_moving_index+1, A
0x0567	0x71EF    	ACALL _moving
;Elevator.c,149 :: 		}
L_main16:
;Elevator.c,144 :: 		for(i = 0; i <4 ; i++)
0x0569	0x0530    	INC _i
;Elevator.c,150 :: 		}
0x056B	0x80E1    	SJMP L_main13
L_main14:
;Elevator.c,151 :: 		}
0x056D	0x80CB    	SJMP L_main11
;Elevator.c,152 :: 		}
0x056F	0x80FE    	SJMP #254
; end of _main
_leds_check:
0x0571	0xC0D0    	PUSH PSW
0x0573	0xC0E0    	PUSH ACC
0x0575	0xC0F0    	PUSH B
0x0577	0xC082    	PUSH DP0L
0x0579	0xC083    	PUSH DP0H
;Elevator.c,36 :: 		void leds_check() iv IVT_ADDR_ET0 ilevel 0 ics ICS_AUTO
;Elevator.c,39 :: 		if(P3.B0)
0x057B	0xE5B0    	MOV A, P3
0x057D	0x30E006  	JNB ACC, L_leds_check0
;Elevator.c,41 :: 		flag[0] = 1;
0x0580	0x754701  	MOV _flag, #1
;Elevator.c,42 :: 		wanted = 0;
0x0583	0x750900  	MOV _wanted, #0
;Elevator.c,43 :: 		}
L_leds_check0:
;Elevator.c,45 :: 		if(P3.B1)
0x0586	0xE5B0    	MOV A, P3
0x0588	0x30E109  	JNB ACC.B1, L_leds_check1
;Elevator.c,47 :: 		flag[1] = 1;
0x058B	0x754801  	MOV _flag+1, #1
;Elevator.c,48 :: 		wanted = 1;
0x058E	0x750901  	MOV _wanted, #1
;Elevator.c,49 :: 		state = 1;
0x0591	0x755D01  	MOV _state, #1
;Elevator.c,50 :: 		}
L_leds_check1:
;Elevator.c,52 :: 		if(P3.B6)
0x0594	0xE5B0    	MOV A, P3
0x0596	0x30E609  	JNB ACC.B6, L_leds_check2
;Elevator.c,54 :: 		flag[1] = 1;
0x0599	0x754801  	MOV _flag+1, #1
;Elevator.c,55 :: 		wanted = 1;
0x059C	0x750901  	MOV _wanted, #1
;Elevator.c,56 :: 		state =-1;
0x059F	0x755DFF  	MOV _state, #255
;Elevator.c,57 :: 		}
L_leds_check2:
;Elevator.c,59 :: 		if(P3.B7)
0x05A2	0xE5B0    	MOV A, P3
0x05A4	0x30E709  	JNB ACC.B7, L_leds_check3
;Elevator.c,61 :: 		flag[2] = 1;
0x05A7	0x754901  	MOV _flag+2, #1
;Elevator.c,62 :: 		wanted = 2;
0x05AA	0x750902  	MOV _wanted, #2
;Elevator.c,63 :: 		state = 1;
0x05AD	0x755D01  	MOV _state, #1
;Elevator.c,64 :: 		}
L_leds_check3:
;Elevator.c,66 :: 		if(P3.B4)
0x05B0	0xE5B0    	MOV A, P3
0x05B2	0x30E409  	JNB ACC.B4, L_leds_check4
;Elevator.c,68 :: 		flag[2] = 1;
0x05B5	0x754901  	MOV _flag+2, #1
;Elevator.c,69 :: 		wanted = 2;
0x05B8	0x750902  	MOV _wanted, #2
;Elevator.c,70 :: 		state = -1;
0x05BB	0x755DFF  	MOV _state, #255
;Elevator.c,71 :: 		}
L_leds_check4:
;Elevator.c,73 :: 		if(P3.B5)
0x05BE	0xE5B0    	MOV A, P3
0x05C0	0x30E506  	JNB ACC.B5, L_leds_check5
;Elevator.c,75 :: 		flag[3] = 1;
0x05C3	0x754A01  	MOV _flag+3, #1
;Elevator.c,76 :: 		wanted = 3;
0x05C6	0x750903  	MOV _wanted, #3
;Elevator.c,77 :: 		}
L_leds_check5:
;Elevator.c,79 :: 		P2.B0=P2.B1=P2.B2=P2.B3=1;
0x05C9	0xD2A3    	SETB P2.B3
0x05CB	0xA2A3    	MOV C, P2.B3
0x05CD	0x92A2    	MOV P2.B2, C
0x05CF	0xA2A2    	MOV C, P2.B2
0x05D1	0x92A1    	MOV P2.B1, C
0x05D3	0xA2A1    	MOV C, P2.B1
0x05D5	0x92A0    	MOV P2.B0, C
;Elevator.c,80 :: 		P2.B0=0;
0x05D7	0xC2A0    	CLR P2.B0
;Elevator.c,81 :: 		if(P2.B4==0)
0x05D9	0x20A403  	JB P2.B4, L_leds_check6
;Elevator.c,84 :: 		flag[1] = 1;
0x05DC	0x754801  	MOV _flag+1, #1
;Elevator.c,85 :: 		}
L_leds_check6:
;Elevator.c,87 :: 		P2.B0=P2.B1=P2.B2=P2.B3=1;
0x05DF	0xD2A3    	SETB P2.B3
0x05E1	0xA2A3    	MOV C, P2.B3
0x05E3	0x92A2    	MOV P2.B2, C
0x05E5	0xA2A2    	MOV C, P2.B2
0x05E7	0x92A1    	MOV P2.B1, C
0x05E9	0xA2A1    	MOV C, P2.B1
0x05EB	0x92A0    	MOV P2.B0, C
;Elevator.c,88 :: 		P2.B0=0;
0x05ED	0xC2A0    	CLR P2.B0
;Elevator.c,89 :: 		if(P2.B5==0)
0x05EF	0x20A503  	JB P2.B5, L_leds_check7
;Elevator.c,92 :: 		flag[2] = 1;
0x05F2	0x754901  	MOV _flag+2, #1
;Elevator.c,93 :: 		}
L_leds_check7:
;Elevator.c,94 :: 		P2.B0=P2.B1=P2.B2=P2.B3=1;
0x05F5	0xD2A3    	SETB P2.B3
0x05F7	0xA2A3    	MOV C, P2.B3
0x05F9	0x92A2    	MOV P2.B2, C
0x05FB	0xA2A2    	MOV C, P2.B2
0x05FD	0x92A1    	MOV P2.B1, C
0x05FF	0xA2A1    	MOV C, P2.B1
0x0601	0x92A0    	MOV P2.B0, C
;Elevator.c,95 :: 		P2.B0=0;
0x0603	0xC2A0    	CLR P2.B0
;Elevator.c,96 :: 		if(P2.B6==0)
0x0605	0x20A603  	JB P2.B6, L_leds_check8
;Elevator.c,99 :: 		flag[3] = 1;
0x0608	0x754A01  	MOV _flag+3, #1
;Elevator.c,100 :: 		}
L_leds_check8:
;Elevator.c,102 :: 		P2.B0=P2.B1=P2.B2=P2.B3=1;
0x060B	0xD2A3    	SETB P2.B3
0x060D	0xA2A3    	MOV C, P2.B3
0x060F	0x92A2    	MOV P2.B2, C
0x0611	0xA2A2    	MOV C, P2.B2
0x0613	0x92A1    	MOV P2.B1, C
0x0615	0xA2A1    	MOV C, P2.B1
0x0617	0x92A0    	MOV P2.B0, C
;Elevator.c,103 :: 		P2.B3=0;
0x0619	0xC2A3    	CLR P2.B3
;Elevator.c,104 :: 		if(P2.B5==0)
0x061B	0x20A503  	JB P2.B5, L_leds_check9
;Elevator.c,106 :: 		flag[0] = 1;
0x061E	0x754701  	MOV _flag, #1
;Elevator.c,107 :: 		}
L_leds_check9:
;Elevator.c,108 :: 		P2.B0=P2.B1=P2.B2=P2.B3=1;
0x0621	0xD2A3    	SETB P2.B3
0x0623	0xA2A3    	MOV C, P2.B3
0x0625	0x92A2    	MOV P2.B2, C
0x0627	0xA2A2    	MOV C, P2.B2
0x0629	0x92A1    	MOV P2.B1, C
0x062B	0xA2A1    	MOV C, P2.B1
0x062D	0x92A0    	MOV P2.B0, C
;Elevator.c,109 :: 		P2.B3=0;
0x062F	0xC2A3    	CLR P2.B3
;Elevator.c,110 :: 		if(P2.B6==0)
0x0631	0x20A603  	JB P2.B6, L_leds_check10
;Elevator.c,112 :: 		flag2 = 1;
0x0634	0x754C01  	MOV _flag2, #1
;Elevator.c,113 :: 		}
L_leds_check10:
;Elevator.c,114 :: 		TCON.TF0=0;
0x0637	0xC28D    	CLR TCON.B5
;Elevator.c,115 :: 		TCON.TR0=1;
0x0639	0xD28C    	SETB TCON.B4
;Elevator.c,117 :: 		}
0x063B	0xD083    	POP DP0H
0x063D	0xD082    	POP DP0L
0x063F	0xD0F0    	POP B
0x0641	0xD0E0    	POP ACC
0x0643	0xD0D0    	POP PSW
0x0645	0x32      	RETI
; end of _leds_check
0x068B	0x7830    	MOV R0, 48
0x068D	0x7945    	MOV R1, 69
0x068F	0x758246  	MOV DP0L, 70
0x0692	0x758306  	MOV DP0H, 6
0x0695	0x12034F  	LCALL 847
0x0698	0x22      	RET
;Elevator.c,0 :: ?ICS_i
0x0646	0x00 ;?ICS_i+0
; end of ?ICS_i
;Elevator.c,0 :: ?ICS?lstr2_Elevator
0x0647	0x4F7065 ;?ICS?lstr2_Elevator+0
0x064A	0x6E2000 ;?ICS?lstr2_Elevator+3
; end of ?ICS?lstr2_Elevator
;Elevator.c,0 :: ?ICS?lstr8_Elevator
0x064D	0x476F20 ;?ICS?lstr8_Elevator+0
0x0650	0x746F20 ;?ICS?lstr8_Elevator+3
0x0653	0x3000 ;?ICS?lstr8_Elevator+6
; end of ?ICS?lstr8_Elevator
;Elevator.c,0 :: ?ICS?lstr7_Elevator
0x0655	0x476F20 ;?ICS?lstr7_Elevator+0
0x0658	0x746F20 ;?ICS?lstr7_Elevator+3
0x065B	0x3300 ;?ICS?lstr7_Elevator+6
; end of ?ICS?lstr7_Elevator
;Elevator.c,0 :: ?ICS_flag
0x065D	0x000000 ;?ICS_flag+0
0x0660	0x00 ;?ICS_flag+3
; end of ?ICS_flag
;Elevator.c,0 :: ?ICS_z
0x0661	0x00 ;?ICS_z+0
; end of ?ICS_z
;Elevator.c,0 :: ?ICS_flag2
0x0662	0x01 ;?ICS_flag2+0
; end of ?ICS_flag2
;Elevator.c,0 :: ?ICS?lstr1_Elevator
0x0663	0x436C6F ;?ICS?lstr1_Elevator+0
0x0666	0x736500 ;?ICS?lstr1_Elevator+3
; end of ?ICS?lstr1_Elevator
;Elevator.c,0 :: ?ICS_direc
0x0669	0x00 ;?ICS_direc+0
; end of ?ICS_direc
;Elevator.c,0 :: ?ICS?lstr5_Elevator
0x066A	0x476F20 ;?ICS?lstr5_Elevator+0
0x066D	0x746F20 ;?ICS?lstr5_Elevator+3
0x0670	0x3100 ;?ICS?lstr5_Elevator+6
; end of ?ICS?lstr5_Elevator
;Elevator.c,0 :: ?ICS_direc2
0x0672	0x00 ;?ICS_direc2+0
; end of ?ICS_direc2
;Elevator.c,0 :: ?ICS_state
0x0673	0x01 ;?ICS_state+0
; end of ?ICS_state
;Elevator.c,0 :: ?ICS?lstr6_Elevator
0x0674	0x20476F ;?ICS?lstr6_Elevator+0
0x0677	0x20746F ;?ICS?lstr6_Elevator+3
0x067A	0x203200 ;?ICS?lstr6_Elevator+6
; end of ?ICS?lstr6_Elevator
;Elevator.c,0 :: ?ICS_j
0x067D	0x00 ;?ICS_j+0
; end of ?ICS_j
;Elevator.c,0 :: ?ICS?lstr4_Elevator
0x067E	0x446F77 ;?ICS?lstr4_Elevator+0
0x0681	0x6E2000 ;?ICS?lstr4_Elevator+3
; end of ?ICS?lstr4_Elevator
;Elevator.c,0 :: ?ICS_wanted2
0x0684	0x00 ;?ICS_wanted2+0
; end of ?ICS_wanted2
;Elevator.c,0 :: ?ICS?lstr3_Elevator
0x0685	0x557020 ;?ICS?lstr3_Elevator+0
0x0688	0x202000 ;?ICS?lstr3_Elevator+3
; end of ?ICS?lstr3_Elevator
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0026      [10]    _Delay_5500us
0x0030       [6]    _Delay_50us
0x0036       [2]    _Delay_1us
0x0038     [219]    _Lcd_Cmd
0x0113      [12]    _Lcd_Chr_CP
0x011F      [34]    _abs
0x0141     [102]    _LCD_Out
0x01A7      [37]    _open_door
0x01CC     [135]    _deduce_want
0x0253      [45]    _Sevenseg
0x0280      [23]    _delay1
0x0297      [37]    _close_door
0x02BC      [70]    _move_elevat
0x0302      [77]    _stringtxt
0x034F       [8]    ___CC2D
0x0357     [152]    _Lcd_Init
0x03EF     [172]    _moving
0x049B      [49]    _fsr_open
0x04CC      [58]    _door_open
0x0506     [107]    _main
0x0571     [213]    _leds_check
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    _time
0x0009       [1]    _wanted
0x000A       [1]    _direc1
0x000B       [1]    _current
0x000C       [1]    _cmd_status
0x000D       [2]    FARG_moving_index
0x000F       [1]    FARG_deduce_want_index
0x000F       [1]    FARG_move_elevat_direction
0x000F       [1]    FARG_Sevenseg_x
0x000F       [1]    FARG_stringtxt_x
0x0010       [1]    FARG_LCD_Out_row
0x0010       [2]    FARG_abs_a
0x0011       [1]    FARG_LCD_Out_column
0x0012       [1]    FARG_LCD_Out_text
0x0013       [1]    LCD_Out_i_L0
0x0014       [1]    FARG_Lcd_Chr_CP_out_char
0x0015       [1]    FARG_Lcd_Cmd_out_char
0x0030       [1]    _i
0x0031       [6]    ?lstr2_Elevator
0x0037       [8]    ?lstr8_Elevator
0x003F       [8]    ?lstr7_Elevator
0x0047       [4]    _flag
0x004B       [1]    _z
0x004C       [1]    _flag2
0x004D       [6]    ?lstr1_Elevator
0x0053       [1]    _direc
0x0054       [8]    ?lstr5_Elevator
0x005C       [1]    _direc2
0x005D       [1]    _state
0x005E       [9]    ?lstr6_Elevator
0x0067       [1]    _j
0x0068       [6]    ?lstr4_Elevator
0x006E       [1]    _wanted2
0x006F       [6]    ?lstr3_Elevator
0x0080       [0]    P0_4_bit
0x0080       [0]    P0_5_bit
0x0080       [0]    LCD_RS
0x0080       [0]    LCD_D4
0x0080       [0]    LCD_D5
0x0080       [0]    LCD_D6
0x0080       [0]    P0_0_bit
0x0080       [0]    P0_1_bit
0x0080       [0]    LCD_D7
0x0080       [0]    LCD_EN
0x0080       [0]    P0_2_bit
0x0080       [0]    P0_3_bit
0x0081       [1]    SP
0x0082       [1]    DPL
0x0083       [1]    DPH
0x0088       [1]    TCON
0x0089       [1]    TMOD
0x008A       [1]    TL0
0x008C       [1]    TH0
0x0090       [1]    P1
0x0098       [1]    SCON
0x00A0       [1]    P2
0x00A8       [1]    IE
0x00B0       [1]    P3
0x00D0       [1]    PSW
0x00E0       [1]    ACC
0x00F0       [1]    B
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0646       [1]    ?ICS_i
0x0647       [6]    ?ICS?lstr2_Elevator
0x064D       [8]    ?ICS?lstr8_Elevator
0x0655       [8]    ?ICS?lstr7_Elevator
0x065D       [4]    ?ICS_flag
0x0661       [1]    ?ICS_z
0x0662       [1]    ?ICS_flag2
0x0663       [6]    ?ICS?lstr1_Elevator
0x0669       [1]    ?ICS_direc
0x066A       [8]    ?ICS?lstr5_Elevator
0x0672       [1]    ?ICS_direc2
0x0673       [1]    ?ICS_state
0x0674       [9]    ?ICS?lstr6_Elevator
0x067D       [1]    ?ICS_j
0x067E       [6]    ?ICS?lstr4_Elevator
0x0684       [1]    ?ICS_wanted2
0x0685       [6]    ?ICS?lstr3_Elevator
//** Label List: ** 
//----------------------------------------------
  L_leds_check0
  L_leds_check1
  L_leds_check2
  L_leds_check3
  L_leds_check4
  L_leds_check5
  L_leds_check6
  L_leds_check7
  L_leds_check8
  L_leds_check9
  L_leds_check10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_deduce_want17
  L_deduce_want18
  L_deduce_want19
  L_deduce_want20
  L_deduce_want21
  L_deduce_want22
  L_deduce_want23
  L_deduce_want24
  L_deduce_want25
  L_deduce_want26
  L_deduce_want27
  L_moving28
  L_moving29
  L_moving30
  L_moving31
  L_moving32
  L_move_elevat33
  L_move_elevat34
  L_Sevenseg35
  L_Sevenseg36
  L_Sevenseg37
  L_Sevenseg38
  L_Sevenseg39
  L_Sevenseg40
  L_stringtxt41
  L_stringtxt42
  L_stringtxt43
  L_stringtxt44
  L_stringtxt45
  L_stringtxt46
  L_delay147
  L_delay148
  L__deduce_want49
  _door_open
  _fsr_open
  _leds_check
  _main
  _deduce_want
  _moving
  _close_door
  _open_door
  _move_elevat
  _Sevenseg
  _stringtxt
  _delay1
  L_abs0
  L___Lib_CStdlib_strtod1
  L___Lib_CStdlib_strtod2
  L___Lib_CStdlib_strtod3
  L___Lib_CStdlib_strtod4
  L___Lib_CStdlib_strtod5
  L___Lib_CStdlib_strtod6
  L___Lib_CStdlib_strtod7
  L___Lib_CStdlib_strtod8
  L___Lib_CStdlib_strtod9
  L___Lib_CStdlib_strtod10
  L___Lib_CStdlib_strtod11
  L___Lib_CStdlib_strtod12
  L___Lib_CStdlib_strtod13
  L___Lib_CStdlib_strtod14
  L___Lib_CStdlib_strtod15
  L___Lib_CStdlib_strtod16
  L___Lib_CStdlib_strtod17
  L___Lib_CStdlib_strtod18
  L___Lib_CStdlib_strtod19
  L___Lib_CStdlib_strtod20
  L___Lib_CStdlib_strtod21
  L___Lib_CStdlib_strtod22
  L___Lib_CStdlib_strtod23
  L___Lib_CStdlib_strtod24
  L___Lib_CStdlib_strtod25
  L___Lib_CStdlib_strtod26
  L___Lib_CStdlib_strtod27
  L___Lib_CStdlib_strtod28
  L___Lib_CStdlib_strtod29
  L___Lib_CStdlib_strtod30
  L___Lib_CStdlib_strtod31
  L___Lib_CStdlib_strtod32
  L___Lib_CStdlib_strtod33
  L___Lib_CStdlib_strtod34
  L___Lib_CStdlib_strtod35
  L___Lib_CStdlib_strtod36
  L___Lib_CStdlib_strtod37
  L___Lib_CStdlib_strtod38
  L___Lib_CStdlib_strtod39
  L___Lib_CStdlib_strtod40
  L___Lib_CStdlib_strtod41
  L___Lib_CStdlib_strtod42
  L___Lib_CStdlib_strtod43
  L___Lib_CStdlib_strtod44
  L___Lib_CStdlib_strtod45
  L___Lib_CStdlib_strtod46
  L___Lib_CStdlib_strtod47
  L___Lib_CStdlib_strtod48
  L___Lib_CStdlib_strtod49
  L___Lib_CStdlib_strtod50
  L___Lib_CStdlib_strtod51
  L___Lib_CStdlib_strtod52
  ___atoi_skipws_atoi
  L_atoi53
  L_atoi54
  L_atoi55
  L_atoi56
  L_atoi57
  L_atoi58
  ___atoi_conv_atoi
  L_atoi59
  L_atoi60
  ___atol_skipws_atol
  L_atol61
  L_atol62
  L_atol63
  L_atol64
  L_atol65
  L_atol66
  ___atol_conv_atol
  L_atol67
  L_atol68
  L_div69
  L_ldiv70
  L_uldiv71
  L_labs72
  L_max73
  L_min74
  L_rand75
  L_xtoi76
  L_xtoi77
  L_xtoi78
  L_xtoi79
  L_xtoi80
  L_xtoi81
  L_xtoi82
  L_xtoi83
  L_xtoi84
  L_xtoi85
  L_xtoi86
  L___Lib_CStdlib_strtod87
  L___Lib_CStdlib_strtod88
  L___Lib_CStdlib_strtod89
  L__atoi90
  L__atol91
  _abs
  __Lib_CStdlib_strtod
  L___Lib_CStdlib_strtod92
  L___Lib_CStdlib_strtod93
  L___Lib_CStdlib_strtod94
  L___Lib_CStdlib_strtod95
  L___Lib_CStdlib_strtod96
  L___Lib_CStdlib_strtod97
  L___Lib_CStdlib_strtod98
  L___Lib_CStdlib_strtod99
  L___Lib_CStdlib_strtod100
  _atof
  _atoi
  L__atoi101
  L__atoi102
  L__atoi103
  L__atoi104
  _atol
  L__atol105
  L__atol106
  _div
  _ldiv
  _uldiv
  _labs
  _max
  _min
  _srand
  _rand
  _xtoi
  L__xtoi107
  L__xtoi108
  L_Delay_Cyc0
  L_Delay_Cyc1
  L_VDelay_ms2
  L_VDelay_ms3
  L_VDelay_ms4
  L_VDelay_ms5
  _Get_Fosc_kHz
  _Delay_1us
  _Delay_10us
  _Delay_22us
  _Delay_50us
  _Delay_80us
  _Delay_500us
  _Delay_5500us
  _Delay_8ms
  _Delay_10ms
  _Delay_100ms
  _Delay_1sec
  _Delay_Cyc
  _VDelay_ms
  L_Lcd_Cmd0
  L_Lcd_Cmd1
  L_Lcd_Cmd2
  L_Lcd_Cmd3
  L_Lcd_Cmd4
  L_Lcd_Cmd5
  L_LCD_Out_CP6
  L_LCD_Out_CP7
  L_Lcd_Chr8
  L_Lcd_Chr9
  L_Lcd_Chr10
  L_Lcd_Chr11
  L_Lcd_Chr12
  L_Lcd_Chr13
  L_Lcd_Chr14
  L_LCD_Out15
  L_LCD_Out16
  L_LCD_Out17
  L_LCD_Out18
  L_LCD_Out19
  L_LCD_Out20
  L_LCD_Out21
  L_LCD_Out22
  L_LCD_Out23
  _Lcd_Cmd
  L__Lcd_Cmd24
  L__Lcd_Cmd25
  L__Lcd_Cmd26
  L__Lcd_Cmd27
  L__Lcd_Cmd28
  L__Lcd_Cmd29
  L__Lcd_Cmd30
  L__Lcd_Cmd31
  L__Lcd_Cmd32
  L__Lcd_Cmd33
  L__Lcd_Cmd34
  L__Lcd_Cmd35
  L__Lcd_Cmd36
  L__Lcd_Cmd37
  L__Lcd_Cmd38
  L__Lcd_Cmd39
  _Lcd_Chr_CP
  _LCD_Out_CP
  _Lcd_Chr
  _Lcd_Init
  _LCD_Out
  _CC2D_Loop1
  _CC2PD_Loop1
  _CC2XD_Loop1
  ___DoIFC
  ___CC2D
  ___CC2PD
  ___CC2XD
  L_leds_check0
  L_leds_check1
  L_leds_check2
  L_leds_check3
  L_leds_check4
  L_leds_check5
  L_leds_check6
  L_leds_check7
  L_leds_check8
  L_leds_check9
  L_leds_check10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_deduce_want17
  L_deduce_want18
  L_deduce_want19
  L_deduce_want20
  L_deduce_want21
  L_deduce_want22
  L_deduce_want23
  L_deduce_want24
  L_deduce_want25
  L_deduce_want26
  L_deduce_want27
  L_moving28
  L_moving29
  L_moving30
  L_moving31
  L_moving32
  L_move_elevat33
  L_move_elevat34
  L_Sevenseg35
  L_Sevenseg36
  L_Sevenseg37
  L_Sevenseg38
  L_Sevenseg39
  L_Sevenseg40
  L_stringtxt41
  L_stringtxt42
  L_stringtxt43
  L_stringtxt44
  L_stringtxt45
  L_stringtxt46
  L_delay147
  L_delay148
  L__deduce_want49
  _door_open
  _fsr_open
  _leds_check
  _main
  _deduce_want
  _moving
  _close_door
  _open_door
  _move_elevat
  _Sevenseg
  _stringtxt
  _delay1
  L_leds_check0
  L_leds_check1
  L_leds_check2
  L_leds_check3
  L_leds_check4
  L_leds_check5
  L_leds_check6
  L_leds_check7
  L_leds_check8
  L_leds_check9
  L_leds_check10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_deduce_want17
  L_deduce_want18
  L_deduce_want19
  L_deduce_want20
  L_deduce_want21
  L_deduce_want22
  L_deduce_want23
  L_deduce_want24
  L_deduce_want25
  L_deduce_want26
  L_deduce_want27
  L_moving28
  L_moving29
  L_moving30
  L_moving31
  L_moving32
  L_move_elevat33
  L_move_elevat34
  L_Sevenseg35
  L_Sevenseg36
  L_Sevenseg37
  L_Sevenseg38
  L_Sevenseg39
  L_Sevenseg40
  L_stringtxt41
  L_stringtxt42
  L_stringtxt43
  L_stringtxt44
  L_stringtxt45
  L_stringtxt46
  L_delay147
  L_delay148
  L__deduce_want49
  _door_open
  _fsr_open
  _leds_check
  _main
  _deduce_want
  _moving
  _close_door
  _open_door
  _move_elevat
  _Sevenseg
  _stringtxt
  _delay1
  L_leds_check0
  L_leds_check1
  L_leds_check2
  L_leds_check3
  L_leds_check4
  L_leds_check5
  L_leds_check6
  L_leds_check7
  L_leds_check8
  L_leds_check9
  L_leds_check10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_deduce_want17
  L_deduce_want18
  L_deduce_want19
  L_deduce_want20
  L_deduce_want21
  L_deduce_want22
  L_deduce_want23
  L_deduce_want24
  L_deduce_want25
  L_deduce_want26
  L_deduce_want27
  L_moving28
  L_moving29
  L_moving30
  L_moving31
  L_moving32
  L_move_elevat33
  L_move_elevat34
  L_Sevenseg35
  L_Sevenseg36
  L_Sevenseg37
  L_Sevenseg38
  L_Sevenseg39
  L_Sevenseg40
  L_stringtxt41
  L_stringtxt42
  L_stringtxt43
  L_stringtxt44
  L_stringtxt45
  L_stringtxt46
  L_delay147
  L_delay148
  L__deduce_want49
  _door_open
  _fsr_open
  _leds_check
  _main
  _deduce_want
  _moving
  _close_door
  _open_door
  _move_elevat
  _Sevenseg
  _stringtxt
  _delay1
